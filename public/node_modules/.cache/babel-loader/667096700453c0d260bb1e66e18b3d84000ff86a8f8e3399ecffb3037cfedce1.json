{"ast":null,"code":"var _jsxFileName = \"F:\\\\MERN\\\\moviestreaming\\\\src\\\\Components\\\\Movies\\\\Movies.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./movies.css\";\nimport sliderControl from \"../../Images/slider-control.jpg\";\nimport star from \"../../Images/star.png\";\nimport { Link } from \"react-router-dom\";\nimport { api_key, fetchDataFromServer } from \"../../Api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Movies() {\n  _s();\n  const [movieSections, setMovieSections] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const homePageSections = [{\n      title: \"Upcoming Movie\",\n      path: \"/movie/upcoming\"\n    }, {\n      title: \"Today's Trending Movies\",\n      path: \"/trending/movies/week\"\n    }, {\n      title: \"Top Rated Movies\",\n      path: \"/movie/top_rated\"\n    }];\n    const fetchMovieData = async () => {\n      try {\n        const fetchedData = await Promise.all(homePageSections.map(({\n          title,\n          path\n        }) => fetchDataFromServer(`https://api.themoviedb.org/3${path}?api_key=${api_key}&page=1`).then(data => ({\n          title,\n          data: data.results\n        }))));\n        setMovieSections(fetchedData);\n        setLoading(false);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n        setLoading(false);\n      }\n    };\n    fetchMovieData();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 12\n    }, this); // You can show a loading spinner or message here.\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: movieSections.map(({\n      title,\n      data\n    }) => /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"movie-list\",\n      \"aria-label\": title\n    }, title, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n}\n_s(Movies, \"oTitTTEtIRfbNFXRpTzDGKzyiK8=\");\n_c = Movies;\nexport default Movies;\nvar _c;\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"names":["React","useEffect","useState","sliderControl","star","Link","api_key","fetchDataFromServer","jsxDEV","_jsxDEV","Fragment","_Fragment","Movies","_s","movieSections","setMovieSections","loading","setLoading","homePageSections","title","path","fetchMovieData","fetchedData","Promise","all","map","then","data","results","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["F:/MERN/moviestreaming/src/Components/Movies/Movies.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./movies.css\";\r\nimport sliderControl from \"../../Images/slider-control.jpg\";\r\nimport star from \"../../Images/star.png\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { api_key, fetchDataFromServer } from \"../../Api\";\r\n\r\nfunction Movies() {\r\n  const [movieSections, setMovieSections] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const homePageSections = [\r\n      { title: \"Upcoming Movie\", path: \"/movie/upcoming\" },\r\n      { title: \"Today's Trending Movies\", path: \"/trending/movies/week\" },\r\n      { title: \"Top Rated Movies\", path: \"/movie/top_rated\" },\r\n    ];\r\n\r\n    const fetchMovieData = async () => {\r\n      try {\r\n        const fetchedData = await Promise.all(\r\n          homePageSections.map(({ title, path }) =>\r\n            fetchDataFromServer(\r\n              `https://api.themoviedb.org/3${path}?api_key=${api_key}&page=1`\r\n            ).then((data) => ({ title, data: data.results }))\r\n          )\r\n        );\r\n\r\n        setMovieSections(fetchedData);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchMovieData();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>; // You can show a loading spinner or message here.\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {movieSections.map(({ title, data }) => (\r\n        <section key={title} className=\"movie-list\" aria-label={title}>\r\n          {/* Rest of your JSX code */}\r\n          {/* ... */}\r\n        </section>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Movies;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,cAAc;AACrB,OAAOC,aAAa,MAAM,iCAAiC;AAC3D,OAAOC,IAAI,MAAM,uBAAuB;AACxC,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,OAAO,EAAEC,mBAAmB,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEzD,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAMiB,gBAAgB,GAAG,CACvB;MAAEC,KAAK,EAAE,gBAAgB;MAAEC,IAAI,EAAE;IAAkB,CAAC,EACpD;MAAED,KAAK,EAAE,yBAAyB;MAAEC,IAAI,EAAE;IAAwB,CAAC,EACnE;MAAED,KAAK,EAAE,kBAAkB;MAAEC,IAAI,EAAE;IAAmB,CAAC,CACxD;IAED,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAMC,WAAW,GAAG,MAAMC,OAAO,CAACC,GAAG,CACnCN,gBAAgB,CAACO,GAAG,CAAC,CAAC;UAAEN,KAAK;UAAEC;QAAK,CAAC,KACnCb,mBAAmB,CAChB,+BAA8Ba,IAAK,YAAWd,OAAQ,SACzD,CAAC,CAACoB,IAAI,CAAEC,IAAI,KAAM;UAAER,KAAK;UAAEQ,IAAI,EAAEA,IAAI,CAACC;QAAQ,CAAC,CAAC,CAClD,CACF,CAAC;QAEDb,gBAAgB,CAACO,WAAW,CAAC;QAC7BL,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC,OAAOY,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;QAC5CZ,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDI,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIL,OAAO,EAAE;IACX,oBAAOP,OAAA;MAAAsB,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,CAAC,CAAC;EAChC;;EAEA,oBACE1B,OAAA,CAAAE,SAAA;IAAAoB,QAAA,EACGjB,aAAa,CAACW,GAAG,CAAC,CAAC;MAAEN,KAAK;MAAEQ;IAAK,CAAC,kBACjClB,OAAA;MAAqB2B,SAAS,EAAC,YAAY;MAAC,cAAYjB;IAAM,GAAhDA,KAAK;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGV,CACV;EAAC,gBACF,CAAC;AAEP;AAACtB,EAAA,CA9CQD,MAAM;AAAAyB,EAAA,GAANzB,MAAM;AAgDf,eAAeA,MAAM;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}