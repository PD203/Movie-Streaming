{"ast":null,"code":"var _jsxFileName = \"F:\\\\MERN\\\\moviestreaming\\\\src\\\\Components\\\\Movies\\\\Movies.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./movies.css\";\nimport sliderControl from \"../../Images/slider-control.jpg\";\nimport star from \"../../Images/star.png\";\nimport { Link } from \"react-router-dom\";\nimport { api_key } from \"../../Api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction fetchDataFromServer(url) {\n  return fetch(url).then(response => {\n    if (!response.ok) {\n      throw new Error(\"Network response was not ok\");\n    }\n    return response.json();\n  }).catch(error => {\n    console.error(\"Error fetching data:\", error);\n    return [];\n  });\n}\nfunction Movies() {\n  _s();\n  const [movieSections, setMovieSections] = useState([]);\n  useEffect(() => {\n    const homePageSections = [{\n      title: \"Upcoming Movie\",\n      path: \"/movie/upcoming\"\n    }, {\n      title: \"Today's Trending Movies\",\n      path: \"/trending/movie/week\"\n    }, {\n      title: \"Top Rated Movies\",\n      path: \"/movie/top_rated\"\n    }];\n    for (const {\n      title,\n      path\n    } of homePageSections) {\n      fetchDataFromServer(`https://api.themoviedb.org/3${path}?api_key=${api_key}&page=1`).then(data => createMovieList(data.results, title)).catch(error => console.error(\"Error fetching data:\", error));\n    }\n  }, []);\n  const createMovieList = function (data, title) {\n    setMovieSections(prevMovieSections => [...prevMovieSections, {\n      title,\n      data\n    }]);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: movieSections.map(({\n      title,\n      data\n    }) => /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"movie-list\",\n      \"aria-label\": title,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"title-large\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slider-list\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"slider-inner\",\n          children: data.map((movie, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"movie-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n              className: \"poster-box card-banner\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: `https://image.tmdb.org/t/p/w1280/${movie.poster_path}`,\n                alt: \"Movie Banner\",\n                className: \"img-cover\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"title\",\n              children: movie.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"meta-list\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"meta-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: star,\n                  alt: \"rating\",\n                  width: \"20\",\n                  height: \"20\",\n                  loading: \"lazy\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"span\",\n                  children: movie.vote_average\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-badge\",\n                children: movie.release_date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: `/details/${movie.id}`,\n              className: \"card-btn\",\n              title: movie.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, title, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n}\n_s(Movies, \"qqbzFqdOvjHnx/SrXM+wL0F0SAA=\");\n_c = Movies;\nexport default Movies;\nvar _c;\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"names":["React","useEffect","useState","sliderControl","star","Link","api_key","jsxDEV","_jsxDEV","Fragment","_Fragment","fetchDataFromServer","url","fetch","then","response","ok","Error","json","catch","error","console","Movies","_s","movieSections","setMovieSections","homePageSections","title","path","data","createMovieList","results","prevMovieSections","children","map","className","fileName","_jsxFileName","lineNumber","columnNumber","movie","index","src","poster_path","alt","width","height","loading","vote_average","release_date","to","id","_c","$RefreshReg$"],"sources":["F:/MERN/moviestreaming/src/Components/Movies/Movies.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./movies.css\";\r\nimport sliderControl from \"../../Images/slider-control.jpg\";\r\nimport star from \"../../Images/star.png\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { api_key } from \"../../Api\";\r\n\r\nfunction fetchDataFromServer(url) {\r\n  return fetch(url)\r\n    .then((response) => {\r\n      if (!response.ok) {\r\n        throw new Error(\"Network response was not ok\");\r\n      }\r\n      return response.json();\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error fetching data:\", error);\r\n      return [];\r\n    });\r\n}\r\n\r\nfunction Movies() {\r\n  const [movieSections, setMovieSections] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const homePageSections = [\r\n      { title: \"Upcoming Movie\", path: \"/movie/upcoming\" },\r\n      { title: \"Today's Trending Movies\", path: \"/trending/movie/week\" },\r\n      { title: \"Top Rated Movies\", path: \"/movie/top_rated\" },\r\n    ];\r\n\r\n    for (const { title, path } of homePageSections) {\r\n      fetchDataFromServer(\r\n        `https://api.themoviedb.org/3${path}?api_key=${api_key}&page=1`\r\n      )\r\n        .then((data) => createMovieList(data.results, title))\r\n        .catch((error) => console.error(\"Error fetching data:\", error));\r\n    }\r\n  }, []);\r\n\r\n  const createMovieList = function (data, title) {\r\n    setMovieSections((prevMovieSections) => [\r\n      ...prevMovieSections,\r\n      { title, data },\r\n    ]);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {movieSections.map(({ title, data }) => (\r\n        <section key={title} className=\"movie-list\" aria-label={title}>\r\n          <div className=\"title-wrapper\">\r\n            <h3 className=\"title-large\">{title}</h3>\r\n          </div>\r\n          <div className=\"slider-list\">\r\n            <div className=\"slider-inner\">\r\n              {data.map((movie, index) => (\r\n                <div key={index} className=\"movie-card\">\r\n                  <figure className=\"poster-box card-banner\">\r\n                    <img\r\n                      src={`https://image.tmdb.org/t/p/w1280/${movie.poster_path}`}\r\n                      alt=\"Movie Banner\"\r\n                      className=\"img-cover\"\r\n                    />\r\n                  </figure>\r\n                  <h4 className=\"title\">{movie.title}</h4>\r\n                  <div className=\"meta-list\">\r\n                    <div className=\"meta-item\">\r\n                      <img\r\n                        src={star}\r\n                        alt=\"rating\"\r\n                        width=\"20\"\r\n                        height=\"20\"\r\n                        loading=\"lazy\"\r\n                      />\r\n                      <span className=\"span\">{movie.vote_average}</span>\r\n                    </div>\r\n                    <div className=\"card-badge\">{movie.release_date}</div>\r\n                  </div>\r\n                  <Link\r\n                    to={`/details/${movie.id}`}\r\n                    className=\"card-btn\"\r\n                    title={movie.title}\r\n                  ></Link>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </section>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Movies;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}