{"ast":null,"code":"var _jsxFileName = \"F:\\\\MERN\\\\moviestreaming\\\\src\\\\Components\\\\Banner\\\\Banner.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport play from \"../../Images/play_circle.png\";\nimport sliderControl from \"../../Images/slider-control.jpg\";\nimport banner from \"../../Images/slider-Banner.jpg\";\nimport \"./banner.css\";\nimport { api_key, fetchDataFromServer } from \"../../Api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Banner() {\n  _s();\n  const [movieList, setMovieList] = useState([]);\n  const [activeSlideIndex, setActiveSlideIndex] = useState(0);\n  useEffect(() => {\n    fetchDataFromServer(`https://api.themoviedb.org/3/movie/popular?api_key=${api_key}&page=1`, heroBanner);\n  }, []);\n  const genreList = {\n    asString(genreIdList) {\n      let newGenreList = [];\n      for (const genreId of genreIdList) {\n        this[genreId] && newGenreList.push(this[genreId]);\n      }\n      return newGenreList.join(\", \");\n    }\n  };\n  const heroBanner = function ({\n    results: movielist\n  }) {\n    setMovieList(movielist);\n  };\n  const handleSlideControlClick = index => {\n    setActiveSlideIndex(index);\n  };\n  const getMovieDetails = movieId => {\n    window.localStorage.setItem(\"movieId\", String(movieId));\n  };\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    className: \"container\",\n    \"page-content\": true,\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"banner\",\n      \"aria-label\": \"popular movies\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"banner-slider\",\n        children: movieList.map((movie, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `slider-item ${index === activeSlideIndex ? \"active\" : \"\"}`,\n          \"slider-item\": true,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: `https://image.tmdb.org/t/p/w1280/${movie.backdrop_path}`,\n            alt: movie.title,\n            className: \"img-cover\",\n            loading: \"eager\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"banner-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"heading\",\n              children: movie.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"meta-list\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"meta-item\",\n                children: movie.release_date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"meta-item card-badge\",\n                children: movie.vote_average\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"genre\",\n              children: getMovieDetails.genres.map(genre => genre.name).join(\", \")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"banner-text\",\n              children: movie.overview\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: `/details/${movie.id}`,\n              className: \"btn\",\n              onClick: () => getMovieDetails(movie.id),\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: play,\n                alt: \"play circle\",\n                \"aria-hidden\": \"true\",\n                width: \"24\",\n                height: \"24\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"span\",\n                children: \"Watch Now\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slider-control \",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control-inner\",\n          children: movieList.map((movie, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `poster-box slider-item ${index === activeSlideIndex ? \"active\" : \"\"}`,\n            \"slider-control\": index,\n            onClick: () => handleSlideControlClick(index),\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `https://image.tmdb.org/t/p/w1280/${movie.poster_path}`,\n              alt: `slide to ${movie.title}`,\n              loading: \"lazy\",\n              draggable: \"false\",\n              className: \"img-cover\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(Banner, \"389folHvT2y/LrBpTD1I0WgKBhM=\");\n_c = Banner;\nexport default Banner;\nvar _c;\n$RefreshReg$(_c, \"Banner\");","map":{"version":3,"names":["React","useEffect","useState","Link","play","sliderControl","banner","api_key","fetchDataFromServer","jsxDEV","_jsxDEV","Banner","_s","movieList","setMovieList","activeSlideIndex","setActiveSlideIndex","heroBanner","genreList","asString","genreIdList","newGenreList","genreId","push","join","results","movielist","handleSlideControlClick","index","getMovieDetails","movieId","window","localStorage","setItem","String","className","children","map","movie","src","backdrop_path","alt","title","loading","fileName","_jsxFileName","lineNumber","columnNumber","release_date","vote_average","genres","genre","name","overview","to","id","onClick","width","height","poster_path","draggable","_c","$RefreshReg$"],"sources":["F:/MERN/moviestreaming/src/Components/Banner/Banner.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport play from \"../../Images/play_circle.png\";\r\nimport sliderControl from \"../../Images/slider-control.jpg\";\r\nimport banner from \"../../Images/slider-Banner.jpg\";\r\nimport \"./banner.css\";\r\nimport { api_key, fetchDataFromServer } from \"../../Api\";\r\n\r\nfunction Banner() {\r\n  const [movieList, setMovieList] = useState([]);\r\n  const [activeSlideIndex, setActiveSlideIndex] = useState(0);\r\n\r\n  useEffect(() => {\r\n    fetchDataFromServer(\r\n      `https://api.themoviedb.org/3/movie/popular?api_key=${api_key}&page=1`,\r\n      heroBanner\r\n    );\r\n  }, []);\r\n\r\n  const genreList = {\r\n    asString(genreIdList) {\r\n      let newGenreList = [];\r\n      for (const genreId of genreIdList) {\r\n        this[genreId] && newGenreList.push(this[genreId]);\r\n      }\r\n      return newGenreList.join(\", \");\r\n    },\r\n  };\r\n\r\n  const heroBanner = function ({ results: movielist }) {\r\n    setMovieList(movielist);\r\n  };\r\n\r\n  const handleSlideControlClick = (index) => {\r\n    setActiveSlideIndex(index);\r\n  };\r\n\r\n  const getMovieDetails = (movieId) => {\r\n    window.localStorage.setItem(\"movieId\", String(movieId));\r\n  };\r\n\r\n  return (\r\n    <article className=\"container\" page-content>\r\n      <section className=\"banner\" aria-label=\"popular movies\">\r\n        <div className=\"banner-slider\">\r\n          {movieList.map((movie, index) => (\r\n            <div\r\n              key={index}\r\n              className={`slider-item ${\r\n                index === activeSlideIndex ? \"active\" : \"\"\r\n              }`}\r\n              slider-item\r\n            >\r\n              <img\r\n                src={`https://image.tmdb.org/t/p/w1280/${movie.backdrop_path}`}\r\n                alt={movie.title}\r\n                className=\"img-cover\"\r\n                loading=\"eager\"\r\n              />\r\n              <div className=\"banner-content\">\r\n                <h2 className=\"heading\">{movie.title}</h2>\r\n                <div className=\"meta-list\">\r\n                  <div className=\"meta-item\">{movie.release_date}</div>\r\n                  <div className=\"meta-item card-badge\">\r\n                    {movie.vote_average}\r\n                  </div>\r\n                </div>\r\n                <p className=\"genre\">\r\n                  {getMovieDetails.genres.map((genre) => genre.name).join(\", \")}\r\n                </p>\r\n                <p className=\"banner-text\">{movie.overview}</p>\r\n                <Link\r\n                  to={`/details/${movie.id}`}\r\n                  className=\"btn\"\r\n                  onClick={() => getMovieDetails(movie.id)}\r\n                >\r\n                  <img\r\n                    src={play}\r\n                    alt=\"play circle\"\r\n                    aria-hidden=\"true\"\r\n                    width=\"24\"\r\n                    height=\"24\"\r\n                  />\r\n                  <span className=\"span\">Watch Now</span>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"slider-control \">\r\n          <div className=\"control-inner\">\r\n            {movieList.map((movie, index) => (\r\n              <button\r\n                key={index}\r\n                className={`poster-box slider-item ${\r\n                  index === activeSlideIndex ? \"active\" : \"\"\r\n                }`}\r\n                slider-control={index}\r\n                onClick={() => handleSlideControlClick(index)}\r\n              >\r\n                <img\r\n                  src={`https://image.tmdb.org/t/p/w1280/${movie.poster_path}`}\r\n                  alt={`slide to ${movie.title}`}\r\n                  loading=\"lazy\"\r\n                  draggable=\"false\"\r\n                  className=\"img-cover\"\r\n                />\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </article>\r\n  );\r\n}\r\n\r\nexport default Banner;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,IAAI,MAAM,8BAA8B;AAC/C,OAAOC,aAAa,MAAM,iCAAiC;AAC3D,OAAOC,MAAM,MAAM,gCAAgC;AACnD,OAAO,cAAc;AACrB,SAASC,OAAO,EAAEC,mBAAmB,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACa,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EAE3DD,SAAS,CAAC,MAAM;IACdO,mBAAmB,CAChB,sDAAqDD,OAAQ,SAAQ,EACtEU,UACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,SAAS,GAAG;IAChBC,QAAQA,CAACC,WAAW,EAAE;MACpB,IAAIC,YAAY,GAAG,EAAE;MACrB,KAAK,MAAMC,OAAO,IAAIF,WAAW,EAAE;QACjC,IAAI,CAACE,OAAO,CAAC,IAAID,YAAY,CAACE,IAAI,CAAC,IAAI,CAACD,OAAO,CAAC,CAAC;MACnD;MACA,OAAOD,YAAY,CAACG,IAAI,CAAC,IAAI,CAAC;IAChC;EACF,CAAC;EAED,MAAMP,UAAU,GAAG,SAAAA,CAAU;IAAEQ,OAAO,EAAEC;EAAU,CAAC,EAAE;IACnDZ,YAAY,CAACY,SAAS,CAAC;EACzB,CAAC;EAED,MAAMC,uBAAuB,GAAIC,KAAK,IAAK;IACzCZ,mBAAmB,CAACY,KAAK,CAAC;EAC5B,CAAC;EAED,MAAMC,eAAe,GAAIC,OAAO,IAAK;IACnCC,MAAM,CAACC,YAAY,CAACC,OAAO,CAAC,SAAS,EAAEC,MAAM,CAACJ,OAAO,CAAC,CAAC;EACzD,CAAC;EAED,oBACEpB,OAAA;IAASyB,SAAS,EAAC,WAAW;IAAC,oBAAY;IAAAC,QAAA,eACzC1B,OAAA;MAASyB,SAAS,EAAC,QAAQ;MAAC,cAAW,gBAAgB;MAAAC,QAAA,gBACrD1B,OAAA;QAAKyB,SAAS,EAAC,eAAe;QAAAC,QAAA,EAC3BvB,SAAS,CAACwB,GAAG,CAAC,CAACC,KAAK,EAAEV,KAAK,kBAC1BlB,OAAA;UAEEyB,SAAS,EAAG,eACVP,KAAK,KAAKb,gBAAgB,GAAG,QAAQ,GAAG,EACzC,EAAE;UACH,mBAAW;UAAAqB,QAAA,gBAEX1B,OAAA;YACE6B,GAAG,EAAG,oCAAmCD,KAAK,CAACE,aAAc,EAAE;YAC/DC,GAAG,EAAEH,KAAK,CAACI,KAAM;YACjBP,SAAS,EAAC,WAAW;YACrBQ,OAAO,EAAC;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChB,CAAC,eACFrC,OAAA;YAAKyB,SAAS,EAAC,gBAAgB;YAAAC,QAAA,gBAC7B1B,OAAA;cAAIyB,SAAS,EAAC,SAAS;cAAAC,QAAA,EAAEE,KAAK,CAACI;YAAK;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC1CrC,OAAA;cAAKyB,SAAS,EAAC,WAAW;cAAAC,QAAA,gBACxB1B,OAAA;gBAAKyB,SAAS,EAAC,WAAW;gBAAAC,QAAA,EAAEE,KAAK,CAACU;cAAY;gBAAAJ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eACrDrC,OAAA;gBAAKyB,SAAS,EAAC,sBAAsB;gBAAAC,QAAA,EAClCE,KAAK,CAACW;cAAY;gBAAAL,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAChB,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,eACNrC,OAAA;cAAGyB,SAAS,EAAC,OAAO;cAAAC,QAAA,EACjBP,eAAe,CAACqB,MAAM,CAACb,GAAG,CAAEc,KAAK,IAAKA,KAAK,CAACC,IAAI,CAAC,CAAC5B,IAAI,CAAC,IAAI;YAAC;cAAAoB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC5D,CAAC,eACJrC,OAAA;cAAGyB,SAAS,EAAC,aAAa;cAAAC,QAAA,EAAEE,KAAK,CAACe;YAAQ;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC/CrC,OAAA,CAACP,IAAI;cACHmD,EAAE,EAAG,YAAWhB,KAAK,CAACiB,EAAG,EAAE;cAC3BpB,SAAS,EAAC,KAAK;cACfqB,OAAO,EAAEA,CAAA,KAAM3B,eAAe,CAACS,KAAK,CAACiB,EAAE,CAAE;cAAAnB,QAAA,gBAEzC1B,OAAA;gBACE6B,GAAG,EAAEnC,IAAK;gBACVqC,GAAG,EAAC,aAAa;gBACjB,eAAY,MAAM;gBAClBgB,KAAK,EAAC,IAAI;gBACVC,MAAM,EAAC;cAAI;gBAAAd,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACZ,CAAC,eACFrC,OAAA;gBAAMyB,SAAS,EAAC,MAAM;gBAAAC,QAAA,EAAC;cAAS;gBAAAQ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACnC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CAAC;QAAA,GAtCDnB,KAAK;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAuCP,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNrC,OAAA;QAAKyB,SAAS,EAAC,iBAAiB;QAAAC,QAAA,eAC9B1B,OAAA;UAAKyB,SAAS,EAAC,eAAe;UAAAC,QAAA,EAC3BvB,SAAS,CAACwB,GAAG,CAAC,CAACC,KAAK,EAAEV,KAAK,kBAC1BlB,OAAA;YAEEyB,SAAS,EAAG,0BACVP,KAAK,KAAKb,gBAAgB,GAAG,QAAQ,GAAG,EACzC,EAAE;YACH,kBAAgBa,KAAM;YACtB4B,OAAO,EAAEA,CAAA,KAAM7B,uBAAuB,CAACC,KAAK,CAAE;YAAAQ,QAAA,eAE9C1B,OAAA;cACE6B,GAAG,EAAG,oCAAmCD,KAAK,CAACqB,WAAY,EAAE;cAC7DlB,GAAG,EAAG,YAAWH,KAAK,CAACI,KAAM,EAAE;cAC/BC,OAAO,EAAC,MAAM;cACdiB,SAAS,EAAC,OAAO;cACjBzB,SAAS,EAAC;YAAW;cAAAS,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACtB;UAAC,GAbGnB,KAAK;YAAAgB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAcJ,CACT;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEd;AAACnC,EAAA,CA1GQD,MAAM;AAAAkD,EAAA,GAANlD,MAAM;AA4Gf,eAAeA,MAAM;AAAC,IAAAkD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}